# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

desc "Load ASC API Key information to use in subsequent lanes"
lane :load_asc_api_key do
 app_store_connect_api_key(
   key_id: ENV["ASC_KEY_ID"],
   issuer_id: ENV["ASC_ISSUER_ID"],
   key_content: ENV["ASC_KEY"],
   is_key_content_base64: true,
   in_house: false # detecting this via ASC private key not currently supported
 )
end

desc "Check certs and profiles"
lane :prepare_signing do |options|
 app_id = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
 api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
 
 cert(
     api_key: api_key,
     keychain_path: ENV["KEYCHAIN_PATH"],
     keychain_password: "signingtmp",
     generate_apple_certs: false
   )
 
 # main app profile
 sigh(
   api_key: api_key,
   app_identifier: app_id,
   provisioning_name: options[:profile_name],
   force: true # always recreate this exact profile to ensure it's valid and not expired
 )

 # network extension profile
 sigh(
   api_key: api_key,
   app_identifier: "net.blocka.app.network-extension",
   provisioning_name: "blokada-networkextension-ios-dist",
   force: true # always recreate this exact profile to ensure it's valid and not expired
 )
end
 
desc "Build the app for release"
lane :build_release do |options|
 app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
 
 output_name = options[:output_name] # specify the name of the .ipa file to generate
 export_method = "app-store" # specify the export method
 compile_bitcode = true # specify whether to enable bitcode
 
 # turn off automatic signing during build so correct code signing identity is guaranteed to be used
 update_code_signing_settings(
   path: './IOS.xcodeproj',
   use_automatic_signing: false,
   targets: [options[:target]],
   code_sign_identity: "Apple Distribution", # replace with name of code signing identity if different
   bundle_identifier: app_identifier,
   profile_name: options[:profile_name],
   build_configurations: ["Release"] # only toggle code signing settings for Release configurations
 )

 if options[:wireguard]
  # same for the network extension
  update_code_signing_settings(
    path: './IOS.xcodeproj',
    use_automatic_signing: false,
    targets: ["WireGuardNetworkExtensioniOS"],
    code_sign_identity: "Apple Distribution", # replace with name of code signing identity if different
    bundle_identifier: "net.blocka.app.network-extension",
    profile_name: "blokada-networkextension-ios-dist",
    build_configurations: ["Release"] # only toggle code signing settings for Release configurations
  )
 
  # build the app
  gym(
    scheme: "Prod",
    output_name: output_name,
    configuration: "Release",
    export_options: {
      method: export_method,
      provisioningProfiles: {
        "net.blocka.app" => "blokada-app-ios-dist",
        "net.blocka.app.network-extension" => "blokada-networkextension-ios-dist"
      },
      compileBitcode: compile_bitcode
    }
  )
  next
  end

  gym(
    scheme: "FamilyProd",
    output_name: output_name,
    configuration: "Release",
    export_options: {
      method: export_method,
      provisioningProfiles: {
        "net.blocka.app.family" => "blokada-app-ios-dist-family",
      },
      compileBitcode: compile_bitcode
    }
  )
end
 
desc "Upload to TestFlight / ASC"
lane :upload_release do |options|
 api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
 
 deliver(
     metadata_path: options[:metadata_path],
     api_key: api_key,
     skip_screenshots: true,
     skip_app_version_update: false,
     force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
     run_precheck_before_submit: false # not supported through ASC API yet
 )
end

# Appfile for_lane should profive proper app id

desc "Build app v6"
lane :build_v6 do
     build_release(
      output_name: "blokada6",
      target: "Prod",
      profile_name: "blokada-app-ios-dist",
      wireguard: true
     )
end

desc "Build family"
lane :build_family do
     build_release(
      output_name: "blokadafamily",
      target: "FamilyProd",
      profile_name: "blokada-app-ios-dist-family"
     )
end

desc "Build and upload to TestFlight v6"
lane :build_upload_testflight_v6 do
     load_asc_api_key
     prepare_signing(
      profile_name: "blokada-app-ios-dist"
     ),
     build_v6
     upload_release(
      metadata_path: "./fastlane/metadata/v6"
     )
end

desc "Build and upload to TestFlight family"
lane :build_upload_testflight_family do
     load_asc_api_key
     prepare_signing(
      profile_name: "blokada-app-ios-dist"
     ),
     build_family
     upload_release(
      metadata_path: "./fastlane/metadata/family"
     )
end
